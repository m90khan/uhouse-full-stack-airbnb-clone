[{"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx":"1","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts":"2","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx":"3","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts":"4","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.tsx":"5","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\index.tsx":"6","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Host\\index.tsx":"7","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\index.tsx":"8","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\index.tsx":"9","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\NotFound\\index.tsx":"10","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Login\\index.tsx":"11","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\index.ts":"12","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\AuthUrl\\index.ts":"13","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\index.ts":"14","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Login\\index.ts":"15","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Logout\\index.ts":"16","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\utils\\index.ts":"17","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\index.ts":"18","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ErrorBanner\\index.tsx":"19","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\index.tsx":"20","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\index.ts":"21","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\MenuItems\\index.tsx":"22","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\AppHeaderSkeleton\\index.tsx":"23","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\User\\index.ts":"24","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\index.ts":"25","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserProfile\\index.tsx":"26","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\PageSkeleton\\index.tsx":"27","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ListingCard\\index.tsx":"28","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserBookings\\index.tsx":"29","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserListings\\index.tsx":"30","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listing\\index.ts":"31","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\index.ts":"32","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingBookings\\index.tsx":"33","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingDetails\\index.tsx":"34","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBooking\\index.tsx":"35","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\index.ts":"36","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeHero\\index.tsx":"37","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\index.tsx":"38","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\data.ts":"39","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listings\\index.ts":"40","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\globalTypes.ts":"41","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListingsSkeleton\\index.tsx":"42","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListings\\index.tsx":"43","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\index.ts":"44","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsFilters\\index.tsx":"45","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsPagination\\index.tsx":"46","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\index.tsx":"47","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\ConnectStripe\\index.ts":"48","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\DisconnectStripe\\index.ts":"49","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Stripe\\index.tsx":"50","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\HostListing\\index.ts":"51","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBookingModal\\index.tsx":"52","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\CreateBooking\\index.ts":"53","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingBookings\\testData.ts":"54"},{"size":1310,"mtime":1610017382351,"results":"55","hashOfConfig":"56"},{"size":425,"mtime":499162500000,"results":"57","hashOfConfig":"56"},{"size":3616,"mtime":1614011463126,"results":"58","hashOfConfig":"56"},{"size":244,"mtime":1613820742624,"results":"59","hashOfConfig":"56"},{"size":3672,"mtime":1613880062583,"results":"60","hashOfConfig":"56"},{"size":3794,"mtime":1614010780218,"results":"61","hashOfConfig":"56"},{"size":10764,"mtime":1614006235020,"results":"62","hashOfConfig":"56"},{"size":3898,"mtime":1614000185760,"results":"63","hashOfConfig":"56"},{"size":3315,"mtime":1613883896348,"results":"64","hashOfConfig":"56"},{"size":801,"mtime":1614010543035,"results":"65","hashOfConfig":"56"},{"size":4677,"mtime":1613820553959,"results":"66","hashOfConfig":"56"},{"size":110,"mtime":1610112355304,"results":"67","hashOfConfig":"56"},{"size":110,"mtime":1609910768469,"results":"68","hashOfConfig":"56"},{"size":190,"mtime":1610341823604,"results":"69","hashOfConfig":"56"},{"size":223,"mtime":1609910884597,"results":"70","hashOfConfig":"56"},{"size":191,"mtime":1609911676332,"results":"71","hashOfConfig":"56"},{"size":1047,"mtime":1614011661616,"results":"72","hashOfConfig":"56"},{"size":131,"mtime":1610033605895,"results":"73","hashOfConfig":"56"},{"size":488,"mtime":1610001298035,"results":"74","hashOfConfig":"56"},{"size":2155,"mtime":1613879706144,"results":"75","hashOfConfig":"56"},{"size":29,"mtime":1610002410063,"results":"76","hashOfConfig":"56"},{"size":2101,"mtime":1613821350434,"results":"77","hashOfConfig":"56"},{"size":416,"mtime":1610013332227,"results":"78","hashOfConfig":"56"},{"size":793,"mtime":1610033163595,"results":"79","hashOfConfig":"56"},{"size":95,"mtime":1610034797104,"results":"80","hashOfConfig":"56"},{"size":4322,"mtime":1613832562424,"results":"81","hashOfConfig":"56"},{"size":382,"mtime":1610029091815,"results":"82","hashOfConfig":"56"},{"size":1620,"mtime":1613835422172,"results":"83","hashOfConfig":"56"},{"size":2195,"mtime":1613836044185,"results":"84","hashOfConfig":"56"},{"size":1564,"mtime":1613835929792,"results":"85","hashOfConfig":"56"},{"size":613,"mtime":1610089674982,"results":"86","hashOfConfig":"56"},{"size":154,"mtime":1610297756366,"results":"87","hashOfConfig":"56"},{"size":2191,"mtime":1613849432075,"results":"88","hashOfConfig":"56"},{"size":2016,"mtime":1610105977112,"results":"89","hashOfConfig":"56"},{"size":7153,"mtime":1614013005644,"results":"90","hashOfConfig":"56"},{"size":100,"mtime":1610113147436,"results":"91","hashOfConfig":"56"},{"size":2845,"mtime":1613892887760,"results":"92","hashOfConfig":"56"},{"size":2319,"mtime":1610208350169,"results":"93","hashOfConfig":"56"},{"size":987,"mtime":1610109650802,"results":"94","hashOfConfig":"56"},{"size":388,"mtime":1610212490889,"results":"95","hashOfConfig":"56"},{"size":1036,"mtime":1613834934430,"results":"96","hashOfConfig":"56"},{"size":1005,"mtime":1613862157010,"results":"97","hashOfConfig":"56"},{"size":856,"mtime":1613832179987,"results":"98","hashOfConfig":"56"},{"size":109,"mtime":1610212261022,"results":"99","hashOfConfig":"56"},{"size":689,"mtime":1610212261004,"results":"100","hashOfConfig":"56"},{"size":492,"mtime":1610212261015,"results":"101","hashOfConfig":"56"},{"size":963,"mtime":1613857010750,"results":"102","hashOfConfig":"56"},{"size":192,"mtime":1610276498093,"results":"103","hashOfConfig":"56"},{"size":157,"mtime":1610276480555,"results":"104","hashOfConfig":"56"},{"size":1930,"mtime":1613739827293,"results":"105","hashOfConfig":"56"},{"size":177,"mtime":1610285331179,"results":"106","hashOfConfig":"56"},{"size":4553,"mtime":1614003850165,"results":"107","hashOfConfig":"56"},{"size":185,"mtime":1610341806125,"results":"108","hashOfConfig":"56"},{"size":1608,"mtime":1613850096537,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1keggji",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx",[],["225","226"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx",["227"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.tsx",["228"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link, RouteComponentProps, useLocation } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Affix, Layout, List, Typography } from 'antd';\r\nimport { ErrorBanner, ListingCard } from '../../lib/components';\r\nimport { LISTINGS } from '../../lib/graphql/queries';\r\nimport {\r\n  Listings as ListingsData,\r\n  ListingsVariables,\r\n} from '../../lib/graphql/queries/Listings/__generated__/Listings';\r\nimport { ListingsFilter } from '../../lib/graphql/globalTypes';\r\nimport { ListingsFilters, ListingsPagination, ListingsSkeleton } from './components';\r\n\r\ninterface MatchParams {\r\n  location: string;\r\n}\r\n\r\nconst { Content } = Layout;\r\nconst { Paragraph, Text, Title } = Typography;\r\n\r\nconst PAGE_LIMIT = 8;\r\n\r\nexport const Listings = ({ match }: RouteComponentProps<MatchParams>) => {\r\n  const [filter, setFilter] = useState(ListingsFilter.PRICE_LOW_TO_HIGH);\r\n  const [page, setPage] = useState(1);\r\n  const locationRef = useRef(match.params.location);\r\n  const { loading, data, error } = useQuery<ListingsData, ListingsVariables>(LISTINGS, {\r\n    /*\r\n  skipping the refetching query on page change using apollo skip \r\n  skip: locationRef.current !== match.params.location && page !== 1,\r\n  */\r\n    skip: locationRef.current !== match.params.location && page !== 1,\r\n\r\n    variables: {\r\n      location: match.params.location,\r\n      filter,\r\n      limit: PAGE_LIMIT,\r\n      page,\r\n    },\r\n  });\r\n  /* to reset the page to 1 if search changes */\r\n  useEffect(() => {\r\n    setPage(1);\r\n    locationRef.current = match.params.location;\r\n  }, [match.params.location]);\r\n  if (loading) {\r\n    return (\r\n      <Content className='listings'>\r\n        <ListingsSkeleton />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Content className='listings'>\r\n        <ErrorBanner description=\"We either couldn't find anything matching your search or have encountered an error. If you're searching for a unique location, try searching again with more common keywords.\" />\r\n        <ListingsSkeleton />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  const listings = data ? data.listings : null;\r\n  const listingsRegion = listings ? listings.region : null;\r\n\r\n  const listingsSectionElement =\r\n    listings && listings.result.length ? (\r\n      <div>\r\n        <Affix offsetTop={64}>\r\n          <ListingsPagination\r\n            total={listings.total}\r\n            page={page}\r\n            limit={PAGE_LIMIT}\r\n            setPage={setPage}\r\n          />\r\n          <ListingsFilters filter={filter} setFilter={setFilter} />\r\n        </Affix>\r\n        <List\r\n          grid={{\r\n            gutter: 8,\r\n            column: 4,\r\n            xs: 1,\r\n            sm: 2,\r\n            lg: 4,\r\n          }}\r\n          dataSource={listings.result}\r\n          renderItem={(listing) => (\r\n            <List.Item style={{ maxWidth: '20rem' }}>\r\n              <ListingCard listing={listing} />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <Paragraph>\r\n          It appears that no listings have yet been created for\r\n          <Text mark>\"{listingsRegion}\"</Text>\r\n        </Paragraph>\r\n        <Paragraph>\r\n          Be the first one to create a <Link to='/host'>listing in this area</Link>!\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n\r\n  const listingsRegionElement = listingsRegion ? (\r\n    <Title level={3} className='listings__title'>\r\n      Results for \"{listingsRegion}\"\r\n    </Title>\r\n  ) : null;\r\n\r\n  return (\r\n    <Content className='listings'>\r\n      {listingsRegionElement}\r\n      {listingsSectionElement}\r\n    </Content>\r\n  );\r\n};\r\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Host\\index.tsx",["229","230","231"],"import React, { useState, FormEvent } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Layout,\r\n  Radio,\r\n  Row,\r\n  Tag,\r\n  Typography,\r\n  Upload,\r\n} from 'antd';\r\n// import { FormComponentProps } from 'antd/lib/form/Form';\r\nimport { UploadChangeParam } from 'antd/lib/upload';\r\nimport { HOST_LISTING } from '../../lib/graphql/mutations';\r\nimport {\r\n  HostListing as HostListingData,\r\n  HostListingVariables,\r\n} from '../../lib/graphql/mutations/HostListing/__generated__/HostListing';\r\nimport { ListingType } from '../../lib/graphql/globalTypes';\r\nimport {\r\n  iconColor,\r\n  displaySuccessNotification,\r\n  displayErrorMessage,\r\n} from '../../lib/utils';\r\nimport { Viewer } from '../../lib/types';\r\nimport {\r\n  HomeOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  BankOutlined,\r\n} from '@ant-design/icons';\r\nimport Paragraph from 'antd/lib/typography/Paragraph';\r\n\r\ninterface Props {\r\n  viewer: Viewer;\r\n}\r\n\r\nconst { Content } = Layout;\r\nconst { Text, Title } = Typography;\r\nconst { Item } = Form;\r\nexport const Host = ({ viewer }: Props) => {\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [imageBase64Value, setImageBase64Value] = useState<string | null>(null);\r\n\r\n  const [hostListing, { loading, data }] = useMutation<\r\n    HostListingData,\r\n    HostListingVariables\r\n  >(HOST_LISTING, {\r\n    onCompleted: () => {\r\n      displaySuccessNotification(\"You've successfully created your listing!\");\r\n    },\r\n    onError: () => {\r\n      displayErrorMessage(\r\n        \"Sorry! We weren't able to create your listing. Please try again later.\"\r\n      );\r\n    },\r\n  });\r\n  const handleImageUpload = (info: UploadChangeParam) => {\r\n    // info object gives the status for the upload so the UploadChangeParam\r\n    const { file } = info;\r\n    if (file.status === 'uploading') {\r\n      setImageLoading(true);\r\n      return;\r\n    }\r\n    // if done is done upload and has property originFileBody which is the original file object\r\n    if (file.status === 'done' && file.originFileObj) {\r\n      getBase64Value(file.originFileObj, (imageBase64Value) => {\r\n        setImageBase64Value(imageBase64Value);\r\n        setImageLoading(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleHostListing = (values: any) => {\r\n    const fullAddress = `${values.address},${values.city},${values.state},${values.country},${values.zipCode}`;\r\n    delete values.image;\r\n    delete values.city;\r\n    delete values.state;\r\n    delete values.country;\r\n    delete values.zipCode;\r\n\r\n    const input = {\r\n      ...values,\r\n      address: fullAddress,\r\n      image: imageBase64Value,\r\n      price: values.price * 100,\r\n    };\r\n\r\n    hostListing({\r\n      variables: {\r\n        input,\r\n      },\r\n    });\r\n  };\r\n  const onFormFailed = (errorInfo: any) => {\r\n    if (errorInfo) {\r\n      displayErrorMessage('Please complete all required form fields!');\r\n      return;\r\n    }\r\n  };\r\n\r\n  if (!viewer.id || !viewer.hasWallet) {\r\n    return (\r\n      <Content className='host-content'>\r\n        <div className='host__form-header'>\r\n          <Title level={4} className='host__form-title'>\r\n            You'll have to be signed in and connected with Stripe to host a listing!\r\n          </Title>\r\n          <Text type='secondary'>\r\n            We only allow users who've signed in to our application and have connected\r\n            with Stripe to host new listings. You can sign in at the{' '}\r\n            <Link to='/login'>/login</Link> page and connect with Stripe shortly after.\r\n          </Text>\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <Content className='host-content'>\r\n        <div className='host__form-header'>\r\n          <Title level={3} className='host__form-title'>\r\n            Please wait!\r\n          </Title>\r\n          <Text type='secondary'>We're creating your listing now.</Text>\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  if (data && data.hostListing) {\r\n    return <Redirect to={`/listing/${data.hostListing.id}`} />;\r\n  }\r\n\r\n  // const { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <Content className='host-content'>\r\n      <Form layout='vertical' onFinish={handleHostListing} onFinishFailed={onFormFailed}>\r\n        <div className='host__form-header'>\r\n          <Title level={3} className='host__form-title'>\r\n            Hi! Let's get started listing your place.\r\n          </Title>\r\n          <Paragraph className=' '>\r\n            <Tag color='blue'>AirHouse Fee Charges ~8% </Tag>\r\n          </Paragraph>\r\n          <Text type='secondary'>\r\n            In this form, we'll collect some basic and additional information about your\r\n            listing.\r\n          </Text>\r\n        </div>\r\n\r\n        <Item\r\n          label='Home Type'\r\n          name='type'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please choose property type for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value={ListingType.APARTMENT}>\r\n              <BankOutlined style={{ color: iconColor }} /> <span>Apartment</span>\r\n              {/* <Icon type='bank' style={{ color: iconColor }} /> <span>Apartment</span> */}\r\n            </Radio.Button>\r\n            <Radio.Button value={ListingType.HOUSE}>\r\n              <HomeOutlined style={{ color: iconColor }} /> <span>House</span>\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Item>\r\n\r\n        <Item\r\n          label='Max number of Guests'\r\n          name='numOfGuests'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter max number of guests for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber min={1} placeholder='4' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Title'\r\n          extra='Max character count of 45'\r\n          name='title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a title for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input maxLength={45} placeholder='The iconic and luxurious Bel-Air mansion' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Description of listing'\r\n          extra='Max character count of 400'\r\n          name='description'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a description for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea\r\n            rows={3}\r\n            maxLength={400}\r\n            placeholder='Modern, clean, and iconic home of the Fresh Prince. Situated in the heart of Bel-Air, Los Angeles.'\r\n          />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Address'\r\n          name='address'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a address for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='251 North Bristol Avenue' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='City/Town'\r\n          name='city'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a city (or region) for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Los Angeles' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='State/Province'\r\n          name='state'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a state (or province) for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='California' />\r\n        </Item>\r\n        <Item\r\n          label='Country'\r\n          name='country'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a country for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Germany' />\r\n        </Item>\r\n        <Item\r\n          label='Zip/Postal Code'\r\n          name='zipCode'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a zip (or postal) code for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter a zip code for your listing!' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Image'\r\n          name='image'\r\n          extra='Images have to be under 1MB in size and of type JPG or PNG'\r\n        >\r\n          <div className='host__form-image-upload'>\r\n            <Upload\r\n              name='image'\r\n              listType='picture-card'\r\n              showUploadList={false}\r\n              action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n              // beforeUpload={beforeImageUpload}\r\n              onChange={handleImageUpload}\r\n            >\r\n              {imageBase64Value ? (\r\n                <img src={imageBase64Value} alt='Listing' />\r\n              ) : (\r\n                <div>\r\n                  {imageLoading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                  <div className='ant-upload-text'>Upload</div>\r\n                </div>\r\n              )}\r\n            </Upload>\r\n          </div>\r\n        </Item>\r\n\r\n        <Item\r\n          label='Price'\r\n          name='price'\r\n          extra='All prices in $USD/day'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a price for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber min={0} placeholder='120' />\r\n        </Item>\r\n\r\n        <Item>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Item>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst beforeImageUpload = (file: File) => {\r\n  const fileIsValidImage = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  const fileIsValidSize = file.size / 1024 / 1024 < 1;\r\n\r\n  if (!fileIsValidImage) {\r\n    displayErrorMessage('You can only upload valid JPG or PNG files!');\r\n    return false;\r\n  }\r\n\r\n  if (!fileIsValidSize) {\r\n    displayErrorMessage('You can only upload valid image files of under 1MB in size!');\r\n    return false;\r\n  }\r\n\r\n  return fileIsValidImage && fileIsValidSize;\r\n};\r\n\r\nconst getBase64Value = (\r\n  img: File | Blob, // upload image can rither be a file or file like object blob\r\n  callback: (imageBase64Value: string) => void\r\n) => {\r\n  /*\r\n  FileReadeer allows to read blocks of a file\r\n  */\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(img); // read the contents of the img file\r\n  reader.onload = () => {\r\n    callback(reader.result as string);\r\n  };\r\n};\r\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\index.tsx",["232"],"import React, { useState } from 'react';\r\nimport { RouteComponentProps, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Col, Layout, Row } from 'antd';\r\nimport { Moment } from 'moment';\r\nimport { ErrorBanner, PageSkeleton } from '../../lib/components';\r\nimport { LISTING } from '../../lib/graphql/queries';\r\nimport {\r\n  Listing as ListingData,\r\n  ListingVariables,\r\n} from '../../lib/graphql/queries/Listing/__generated__/Listing';\r\nimport { Viewer } from '../../lib/types';\r\nimport {\r\n  ListingCreateBooking,\r\n  ListingBookings,\r\n  ListingDetails,\r\n  WrappedListingCreateBookingModal as ListingCreateBookingModal,\r\n} from './components';\r\ninterface MatchParams {\r\n  id: string;\r\n}\r\ninterface Props {\r\n  viewer: Viewer;\r\n}\r\nconst { Content } = Layout;\r\nconst PAGE_LIMIT = 3;\r\n\r\nexport const Listing = ({ viewer }: Props) => {\r\n  const match = useParams<MatchParams>();\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [bookingsPage, setBookingsPage] = useState(1);\r\n  const [checkInDate, setCheckInDate] = useState<Moment | null>(null);\r\n  const [checkOutDate, setCheckOutDate] = useState<Moment | null>(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const { loading, data, error, refetch } = useQuery<ListingData, ListingVariables>(\r\n    LISTING,\r\n    {\r\n      variables: {\r\n        id: match.id,\r\n        bookingsPage,\r\n        limit: PAGE_LIMIT,\r\n      },\r\n    }\r\n  );\r\n  const clearBookingData = () => {\r\n    setModalVisible(false);\r\n    setCheckInDate(null);\r\n    setCheckOutDate(null);\r\n  };\r\n  const handleListingRefetch = async () => {\r\n    await refetch();\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <Content className='listings'>\r\n        <PageSkeleton />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Content className='listings'>\r\n        <ErrorBanner description=\"This listing may not exist or we've encountered an error. Please try again soon!\" />\r\n        <PageSkeleton />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  const listing = data ? data.listing : null;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const listingBookings = listing ? listing.bookings : null;\r\n  // const listingBookings = listingBookingData;\r\n\r\n  const listingDetailsElement = listing ? <ListingDetails listing={listing} /> : null;\r\n\r\n  const listingBookingsElement = listingBookings ? (\r\n    <ListingBookings\r\n      listingBookings={listingBookings}\r\n      bookingsPage={bookingsPage}\r\n      limit={PAGE_LIMIT}\r\n      setBookingsPage={setBookingsPage}\r\n    />\r\n  ) : null;\r\n  const listingCreateBookingElement = listing ? (\r\n    <ListingCreateBooking\r\n      viewer={viewer}\r\n      host={listing.host}\r\n      price={listing.price}\r\n      bookingsIndex={listing.bookingsIndex}\r\n      checkInDate={checkInDate}\r\n      checkOutDate={checkOutDate}\r\n      setCheckInDate={setCheckInDate}\r\n      setCheckOutDate={setCheckOutDate}\r\n      setModalVisible={setModalVisible}\r\n    />\r\n  ) : null;\r\n  const listingCreateBookingModalElement =\r\n    listing && checkInDate && checkOutDate ? (\r\n      <ListingCreateBookingModal\r\n        id={listing.id}\r\n        price={listing.price}\r\n        modalVisible={modalVisible}\r\n        checkInDate={checkInDate}\r\n        checkOutDate={checkOutDate}\r\n        setModalVisible={setModalVisible}\r\n        clearBookingData={clearBookingData}\r\n        handleListingRefetch={handleListingRefetch}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Content className='listings'>\r\n      <Row gutter={24} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Col xs={24} lg={14}>\r\n          {listingDetailsElement}\r\n          {listingBookingsElement}\r\n        </Col>\r\n        <Col xs={24} lg={10}>\r\n          {listingCreateBookingElement}\r\n        </Col>\r\n      </Row>\r\n      {listingCreateBookingModalElement}\r\n    </Content>\r\n  );\r\n};\r\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\index.tsx",["233"],"import React, { useState } from 'react';\r\n// to access the match props of a certain route and assign as generic\r\nimport { RouteComponentProps, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Col, Layout, Row } from 'antd';\r\nimport { USER } from '../../lib/graphql/queries';\r\nimport {\r\n  User as UserData,\r\n  UserVariables,\r\n} from '../../lib/graphql/queries/User/__generated__/User';\r\nimport { ErrorBanner, PageSkeleton } from '../../lib/components';\r\nimport { Viewer } from '../../lib/types';\r\nimport { UserBookings, UserListings, UserProfile } from './components';\r\n\r\ninterface Props {\r\n  viewer: Viewer;\r\n  setViewer: (viewer: Viewer) => void;\r\n}\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n}\r\n\r\nconst { Content } = Layout;\r\nconst PAGE_LIMIT = 4;\r\nexport const User = ({ viewer, setViewer }: Props) => {\r\n  const { id: paramsID } = useParams<MatchParams>();\r\n  const [listingsPage, setListingsPage] = useState(1);\r\n  const [bookingsPage, setBookingsPage] = useState(1);\r\n  const { data, loading, error, refetch } = useQuery<UserData, UserVariables>(USER, {\r\n    variables: {\r\n      id: paramsID,\r\n      bookingsPage,\r\n      listingsPage,\r\n      limit: PAGE_LIMIT,\r\n    },\r\n  });\r\n  const handleUserRefetch = async () => {\r\n    await refetch();\r\n  };\r\n  /* handle stripe error: when user redirected to /user/viewerId on stripe error  */\r\n  const stripeError = new URL(window.location.href).searchParams.get('stripe_error');\r\n  const stripeErrorBanner = stripeError ? (\r\n    <ErrorBanner description='We had an issue connecting with Stripe. Please try again soon.' />\r\n  ) : null;\r\n\r\n  if (loading) {\r\n    return (\r\n      <Content className='user'>\r\n        <PageSkeleton />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Content className='user'>\r\n        <ErrorBanner description=\"This user may not exist or we've encountered an error. Please try again soon.\" />\r\n        <PageSkeleton />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  const user = data ? data.user : null;\r\n  const viewerIsUser = viewer.id === paramsID;\r\n\r\n  const userListings = user ? user.listings : null;\r\n  const userBookings = user ? user.bookings : null;\r\n  const userProfileElement = user ? (\r\n    <UserProfile\r\n      user={user}\r\n      viewer={viewer}\r\n      viewerIsUser={viewerIsUser}\r\n      setViewer={setViewer}\r\n      handleUserRefetch={handleUserRefetch}\r\n    />\r\n  ) : null;\r\n\r\n  const userListingsElement = userListings ? (\r\n    <UserListings\r\n      userListings={userListings}\r\n      listingsPage={listingsPage}\r\n      limit={PAGE_LIMIT}\r\n      setListingsPage={setListingsPage}\r\n    />\r\n  ) : null;\r\n\r\n  const userBookingsElement = userListings ? (\r\n    <UserBookings\r\n      userBookings={userBookings}\r\n      bookingsPage={bookingsPage}\r\n      limit={PAGE_LIMIT}\r\n      setBookingsPage={setBookingsPage}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <Content className='user'>\r\n      {stripeErrorBanner}\r\n\r\n      <Row\r\n        gutter={12}\r\n        // style={{ display: 'flex', justifyContent: 'space-between' }}\r\n        typeof='flex'\r\n        justify='space-between'\r\n      >\r\n        <Col xs={24}>{userProfileElement}</Col>\r\n        <Col xs={24}>\r\n          {userListingsElement}\r\n          {userBookingsElement}\r\n        </Col>\r\n      </Row>\r\n    </Content>\r\n  );\r\n};\r\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\NotFound\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Login\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\AuthUrl\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Login\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Logout\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\utils\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ErrorBanner\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\MenuItems\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\AppHeaderSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\User\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserProfile\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\PageSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ListingCard\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserBookings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserListings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listing\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingBookings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingDetails\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBooking\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeHero\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\index.tsx",[],["234","235"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\data.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listings\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\globalTypes.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListingsSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsFilters\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsPagination\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\ConnectStripe\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\DisconnectStripe\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Stripe\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\HostListing\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBookingModal\\index.tsx",["236"],"import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CardElement, injectStripe, ReactStripeElements } from 'react-stripe-elements';\nimport { Button, Divider, Modal, Tag, Typography } from 'antd';\nimport { KeyOutlined } from '@ant-design/icons';\n\nimport moment, { Moment } from 'moment';\nimport { CREATE_BOOKING } from '../../../../lib/graphql/mutations';\nimport {\n  CreateBooking as CreateBookingData,\n  CreateBookingVariables,\n} from '../../../../lib/graphql/mutations/CreateBooking/__generated__/CreateBooking';\nimport {\n  formatListingPrice,\n  displaySuccessNotification,\n  displayErrorMessage,\n} from '../../../../lib/utils';\n\ninterface Props {\n  id: string;\n  price: number;\n  modalVisible: boolean;\n  checkInDate: Moment;\n  checkOutDate: Moment;\n  setModalVisible: (modalVisible: boolean) => void;\n  clearBookingData: () => void;\n  handleListingRefetch: () => Promise<void>;\n}\n\nconst { Paragraph, Text, Title } = Typography;\n\nexport const ListingCreateBookingModal = ({\n  id,\n  price,\n  modalVisible,\n  checkInDate,\n  checkOutDate,\n  setModalVisible,\n  clearBookingData,\n  handleListingRefetch,\n  stripe,\n}: Props & ReactStripeElements.InjectedStripeProps) => {\n  const [createBooking, { loading }] = useMutation<\n    CreateBookingData,\n    CreateBookingVariables\n  >(CREATE_BOOKING, {\n    onCompleted: () => {\n      clearBookingData();\n      displaySuccessNotification(\n        \"You've successfully booked the listing!\",\n        'Booking history can always be found in your User page.'\n      );\n      handleListingRefetch();\n    },\n    onError: () => {\n      displayErrorMessage(\n        \"Sorry! We weren't able to successfully book the listing. Please try again later!\"\n      );\n    },\n  });\n  const daysBooked = checkOutDate.diff(checkInDate, 'days') + 1;\n  const listingPrice = price * daysBooked;\n  // const airHouseFee = 0.08 * listingPrice;\n\n  const handleCreateBooking = async () => {\n    if (!stripe) {\n      return displayErrorMessage(\"Sorry! We weren't able to connect with Stripe.\");\n    }\n\n    let { token: stripeToken, error } = await stripe.createToken();\n    if (stripeToken) {\n      createBooking({\n        variables: {\n          input: {\n            id,\n            source: stripeToken.id,\n            checkIn: moment(checkInDate).format('YYYY-MM-DD'),\n            checkOut: moment(checkOutDate).format('YYYY-MM-DD'),\n          },\n        },\n      });\n    } else {\n      displayErrorMessage(\n        error && error.message\n          ? error.message\n          : \"Sorry! We weren't able to book the listing. Please try again later.\"\n      );\n    }\n  };\n\n  return (\n    <Modal\n      visible={modalVisible}\n      centered\n      footer={null}\n      onCancel={() => setModalVisible(false)}\n    >\n      <div className='listing-booking-modal'>\n        <div className='listing-booking-modal__intro'>\n          <Title className='listing-boooking-modal__intro-title'>\n            <KeyOutlined />{' '}\n          </Title>\n          <Title level={3} className='listing-boooking-modal__intro-title'>\n            Book your trip!\n          </Title>\n          <Paragraph>\n            Enter your payment information to book the listing from the dates between{' '}\n            <Text mark strong>\n              {moment(checkInDate).format('MMMM Do YYYY')}\n            </Text>{' '}\n            and{' '}\n            <Text mark strong>\n              {moment(checkOutDate).format('MMMM Do YYYY')}\n            </Text>\n            , inclusive.\n          </Paragraph>\n        </div>\n\n        <Divider />\n\n        <div className='listing-booking-modal__charge-summary'>\n          <Paragraph>\n            {formatListingPrice(price, false)} * {daysBooked} days ={' '}\n            <Text strong>{formatListingPrice(listingPrice, false)}</Text>\n          </Paragraph>\n\n          <Paragraph className='listing-booking-modal__charge-summary-total'>\n            Total = <Text mark>{formatListingPrice(listingPrice, false)}</Text>\n          </Paragraph>\n        </div>\n\n        <Divider />\n\n        <div className='listing-booking-modal__stripe-card-section'>\n          <CardElement hidePostalCode className='listing-booking-modal__stripe-card' />\n          <Button\n            size='large'\n            type='primary'\n            className='listing-booking-modal__cta'\n            loading={loading}\n            onClick={handleCreateBooking}\n          >\n            Book Now\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport const WrappedListingCreateBookingModal = injectStripe(ListingCreateBookingModal);\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\CreateBooking\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingBookings\\testData.ts",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":25,"column":8,"nodeType":"243","messageId":"244","endLine":25,"endColumn":14},{"ruleId":"241","severity":1,"message":"245","line":2,"column":37,"nodeType":"243","messageId":"244","endLine":2,"endColumn":48},{"ruleId":"241","severity":1,"message":"246","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"247","line":11,"column":3,"nodeType":"243","messageId":"244","endLine":11,"endColumn":6},{"ruleId":"241","severity":1,"message":"248","line":336,"column":7,"nodeType":"243","messageId":"244","endLine":336,"endColumn":24},{"ruleId":"241","severity":1,"message":"249","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":29},{"ruleId":"241","severity":1,"message":"249","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":29},{"ruleId":"237","replacedBy":"250"},{"ruleId":"239","replacedBy":"251"},{"ruleId":"241","severity":1,"message":"252","line":4,"column":34,"nodeType":"243","messageId":"244","endLine":4,"endColumn":37},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'FormEvent' is defined but never used.","'Row' is defined but never used.","'beforeImageUpload' is assigned a value but never used.","'RouteComponentProps' is defined but never used.",["253"],["254"],"'Tag' is defined but never used.","no-global-assign","no-unsafe-negation"]