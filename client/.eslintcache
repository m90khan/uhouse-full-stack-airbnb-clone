[{"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx":"1","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts":"2","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx":"3","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts":"4","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.ts":"5","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\Listings.tsx":"6","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\index.ts":"7","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\server.ts":"8"},{"size":493,"mtime":1609574357287,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":325,"mtime":1609582250232,"results":"12","hashOfConfig":"10"},{"size":35,"mtime":1609577073724,"results":"13","hashOfConfig":"10"},{"size":29,"mtime":1609576782312,"results":"14","hashOfConfig":"10"},{"size":1726,"mtime":1609586742017,"results":"15","hashOfConfig":"10"},{"size":27,"mtime":1609582493369,"results":"16","hashOfConfig":"10"},{"size":653,"mtime":1609585922147,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1keggji",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx",[],["37","38"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\Listings.tsx",["39"],"import React, { FunctionComponent, useState } from 'react';\r\nimport { server } from '../../lib/api/index';\r\nimport { ListingsData, DeleteListingData, DeleteListingVariables } from './types';\r\ninterface Props {\r\n  title: string;\r\n}\r\n// query Listings{ : we can name the query anything\r\n\r\nconst LISTINGS = `\r\nquery Listings{ \r\nlistings{    \r\n    id\r\n    title\r\n    image\r\n    address\r\n    price\r\n    numOfGuests\r\n    numOfBeds\r\n     numOfBaths\r\n    rating\r\n}\r\n}\r\n`;\r\n\r\nconst DELETE_LISTING = `\r\nmutation DeleteListing($id: ID! ){\r\n    deleteListing(id: $id){\r\n        id\r\n    }\r\n}\r\n`;\r\nexport const Listings = ({ title }: Props) => {\r\n  const [Lists, setLists] = useState<any[]>([]);\r\n  const fetchListing = async () => {\r\n    const { data } = await server.fetch<ListingsData>({ query: LISTINGS });\r\n    setLists(data.listings);\r\n    console.log(data.listings);\r\n  };\r\n\r\n  const deleteListing = async () => {\r\n    const { data } = await server.fetch<DeleteListingData, DeleteListingVariables>({\r\n      query: DELETE_LISTING,\r\n      variables: {\r\n        id: '5feed8a32641e8410070b0f9',\r\n      },\r\n    });\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>AirHouse</h2>\r\n      <h3>{title}</h3>\r\n      {Lists.map((list) => (\r\n        <h1 key={list.id}>{list.title}:string</h1>\r\n      ))}\r\n      <button onClick={() => fetchListing()}>Query Listings</button>\r\n      <button onClick={() => deleteListing()}>Delete Listings</button>\r\n    </div>\r\n  );\r\n};\r\n// explicitly define the type of the Listing2 functional compoenent\r\n// export const Listings2: FunctionComponent<Props> = ({ title }: Props) => {\r\n//   return (\r\n//     <div>\r\n//       <h2>AirHouse</h2>\r\n//       <h3>{title}</h3>\r\n//     </div>\r\n//   );\r\n// };\r\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\server.ts",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":34},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'FunctionComponent' is defined but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]