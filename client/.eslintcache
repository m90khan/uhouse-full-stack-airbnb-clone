[{"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx":"1","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts":"2","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx":"3","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts":"4","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.tsx":"5","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\index.tsx":"6","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Host\\index.tsx":"7","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\index.tsx":"8","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\index.tsx":"9","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\NotFound\\index.tsx":"10","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Login\\index.tsx":"11","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\index.ts":"12","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\AuthUrl\\index.ts":"13","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\index.ts":"14","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Login\\index.ts":"15","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Logout\\index.ts":"16","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\utils\\index.ts":"17","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\index.ts":"18","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ErrorBanner\\index.tsx":"19","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\index.tsx":"20","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\index.ts":"21","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\MenuItems\\index.tsx":"22","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\AppHeaderSkeleton\\index.tsx":"23","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\User\\index.ts":"24","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\index.ts":"25","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserProfile\\index.tsx":"26","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\PageSkeleton\\index.tsx":"27","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ListingCard\\index.tsx":"28","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserBookings\\index.tsx":"29","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserListings\\index.tsx":"30","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listing\\index.ts":"31","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\index.ts":"32","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingBookings\\index.tsx":"33","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingDetails\\index.tsx":"34","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBooking\\index.tsx":"35","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\index.ts":"36","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeHero\\index.tsx":"37","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\index.tsx":"38","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\data.ts":"39","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listings\\index.ts":"40","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\globalTypes.ts":"41","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListingsSkeleton\\index.tsx":"42","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListings\\index.tsx":"43","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\index.ts":"44","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsFilters\\index.tsx":"45","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsPagination\\index.tsx":"46","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\index.tsx":"47","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\ConnectStripe\\index.ts":"48","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\DisconnectStripe\\index.ts":"49","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Stripe\\index.tsx":"50","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\HostListing\\index.ts":"51","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBookingModal\\index.tsx":"52","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\CreateBooking\\index.ts":"53"},{"size":1310,"mtime":1610017382351,"results":"54","hashOfConfig":"55"},{"size":425,"mtime":499162500000,"results":"56","hashOfConfig":"55"},{"size":3894,"mtime":1610343338853,"results":"57","hashOfConfig":"55"},{"size":214,"mtime":1610276615539,"results":"58","hashOfConfig":"55"},{"size":3560,"mtime":1610217007873,"results":"59","hashOfConfig":"55"},{"size":3140,"mtime":1610116283749,"results":"60","hashOfConfig":"55"},{"size":10478,"mtime":1610293090964,"results":"61","hashOfConfig":"55"},{"size":3855,"mtime":1610342353187,"results":"62","hashOfConfig":"55"},{"size":2957,"mtime":1610277566657,"results":"63","hashOfConfig":"55"},{"size":133,"mtime":1609831199424,"results":"64","hashOfConfig":"55"},{"size":4077,"mtime":1610017843654,"results":"65","hashOfConfig":"55"},{"size":110,"mtime":1610112355304,"results":"66","hashOfConfig":"55"},{"size":110,"mtime":1609910768469,"results":"67","hashOfConfig":"55"},{"size":190,"mtime":1610341823604,"results":"68","hashOfConfig":"55"},{"size":223,"mtime":1609910884597,"results":"69","hashOfConfig":"55"},{"size":191,"mtime":1609911676332,"results":"70","hashOfConfig":"55"},{"size":592,"mtime":1610095777898,"results":"71","hashOfConfig":"55"},{"size":131,"mtime":1610033605895,"results":"72","hashOfConfig":"55"},{"size":488,"mtime":1610001298035,"results":"73","hashOfConfig":"55"},{"size":2140,"mtime":1610216692917,"results":"74","hashOfConfig":"55"},{"size":29,"mtime":1610002410063,"results":"75","hashOfConfig":"55"},{"size":2102,"mtime":1610094857148,"results":"76","hashOfConfig":"55"},{"size":416,"mtime":1610013332227,"results":"77","hashOfConfig":"55"},{"size":793,"mtime":1610033163595,"results":"78","hashOfConfig":"55"},{"size":95,"mtime":1610034797104,"results":"79","hashOfConfig":"55"},{"size":4271,"mtime":1610278905412,"results":"80","hashOfConfig":"55"},{"size":382,"mtime":1610029091815,"results":"81","hashOfConfig":"55"},{"size":1620,"mtime":1610281387440,"results":"82","hashOfConfig":"55"},{"size":2171,"mtime":1610034679184,"results":"83","hashOfConfig":"55"},{"size":1532,"mtime":1610034691728,"results":"84","hashOfConfig":"55"},{"size":613,"mtime":1610089674982,"results":"85","hashOfConfig":"55"},{"size":154,"mtime":1610297756366,"results":"86","hashOfConfig":"55"},{"size":2167,"mtime":1610090735848,"results":"87","hashOfConfig":"55"},{"size":2016,"mtime":1610105977112,"results":"88","hashOfConfig":"55"},{"size":5418,"mtime":1610298165473,"results":"89","hashOfConfig":"55"},{"size":100,"mtime":1610113147436,"results":"90","hashOfConfig":"55"},{"size":2596,"mtime":1610281054705,"results":"91","hashOfConfig":"55"},{"size":2319,"mtime":1610208350169,"results":"92","hashOfConfig":"55"},{"size":987,"mtime":1610109650802,"results":"93","hashOfConfig":"55"},{"size":388,"mtime":1610212490889,"results":"94","hashOfConfig":"55"},{"size":1036,"mtime":1610342777855,"results":"95","hashOfConfig":"55"},{"size":984,"mtime":1610116206178,"results":"96","hashOfConfig":"55"},{"size":832,"mtime":1610113117974,"results":"97","hashOfConfig":"55"},{"size":109,"mtime":1610212261022,"results":"98","hashOfConfig":"55"},{"size":689,"mtime":1610212261004,"results":"99","hashOfConfig":"55"},{"size":492,"mtime":1610212261015,"results":"100","hashOfConfig":"55"},{"size":902,"mtime":1610212261019,"results":"101","hashOfConfig":"55"},{"size":192,"mtime":1610276498093,"results":"102","hashOfConfig":"55"},{"size":157,"mtime":1610276480555,"results":"103","hashOfConfig":"55"},{"size":1896,"mtime":1610276600597,"results":"104","hashOfConfig":"55"},{"size":177,"mtime":1610285331179,"results":"105","hashOfConfig":"55"},{"size":4496,"mtime":1610341615072,"results":"106","hashOfConfig":"55"},{"size":185,"mtime":1610341806125,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1keggji",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx",[],["219","220"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx",["221"],"import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Home, Listing, NotFound, User, Listings, Login, Stripe, Host } from './sections';\nimport { Affix, Layout, Spin } from 'antd';\nimport { Viewer } from './lib/types';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOG_IN } from './lib/graphql/mutations';\nimport { StripeProvider, Elements } from 'react-stripe-elements';\n\nimport {\n  LogIn as LogInData,\n  LogInVariables,\n} from './lib/graphql/mutations/Login/__generated__/LogIn';\nimport { AppHeader } from './sections/AppHeader';\nimport { AppHeaderSkeleton, ErrorBanner } from './lib/components';\nimport Footer from './sections/Footer';\n\n// viewer for access\n\nconst initialViewer: Viewer = {\n  id: null,\n  token: null,\n  avatar: null,\n  hasWallet: null,\n  didRequest: false,\n};\n\nconst AppRouter = () => {\n  const [viewer, setViewer] = useState<Viewer>(initialViewer);\n\n  //set cookie\n  const [logIn, { error }] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.logIn) {\n        setViewer(data.logIn);\n\n        if (data.logIn.token) {\n          sessionStorage.setItem('token', data.logIn.token);\n        } else {\n          sessionStorage.removeItem('token');\n        }\n      }\n    },\n  });\n  /*\n  the logIn() should only runs when the App component is mounter, should be constant\n  useRef will help in this regard to keep it constant\n  */\n  const logInRef = useRef(logIn);\n  useEffect(() => {\n    logInRef.current();\n  }, []);\n\n  // error status and didRequest : if user login or attemping to login\n  if (!viewer.didRequest && !error) {\n    return (\n      <Layout className='app-skeleton'>\n        <AppHeaderSkeleton />\n        <div className='app-skeleton__spin-section'>\n          <Spin size='large' tip='Launching AirHouse' />\n        </div>\n      </Layout>\n    );\n  }\n  const logInErrorBannerElement = error ? (\n    <ErrorBanner description=\"We weren't able to verify if you were logged in. Please try again later!\" />\n  ) : null;\n  return (\n    // Router =  parent router\n    <StripeProvider apiKey={process.env.REACT_APP_S_PUBLISHABLE_KEY as string}>\n      <Router>\n        <Layout id='app'>\n          {logInErrorBannerElement}\n\n          <Affix offsetTop={0} className='app__affix-header'>\n            <AppHeader viewer={viewer} setViewer={setViewer} />\n          </Affix>\n          <Switch>\n            <Route path='/' component={Home} exact />\n            <Route\n              exact\n              path='/host'\n              render={(props) => <Host {...props} viewer={viewer} />}\n            />\n            <Route\n              exact\n              path='/listing/:id'\n              render={(props) => (\n                <Elements>\n                  <Listing {...props} viewer={viewer} />\n                </Elements>\n              )}\n            />\n            <Route path='/listings/:location?' component={Listings} exact />\n            <Route\n              exact\n              path='/login'\n              render={(props) => <Login {...props} setViewer={setViewer} />}\n            />\n            <Route\n              exact\n              path='/user/:id'\n              render={(props) => (\n                <User {...props} viewer={viewer} setViewer={setViewer} />\n              )}\n            />\n            <Route\n              exact\n              path='/stripe'\n              render={(props) => (\n                <Stripe {...props} viewer={viewer} setViewer={setViewer} />\n              )}\n            />\n            <Route component={NotFound} />\n          </Switch>\n          {/* <Footer /> */}\n        </Layout>\n      </Router>\n    </StripeProvider>\n  );\n};\n\nfunction App() {\n  return <AppRouter />;\n}\n\nexport default App;\n\n/*\ninvoke post and get http method. \n  - query executed parallel while mutation one after another\n*/\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Host\\index.tsx",["222"],"import React, { useState, FormEvent } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Layout,\r\n  Radio,\r\n  Typography,\r\n  Upload,\r\n} from 'antd';\r\n// import { FormComponentProps } from 'antd/lib/form/Form';\r\nimport { UploadChangeParam } from 'antd/lib/upload';\r\nimport { HOST_LISTING } from '../../lib/graphql/mutations';\r\nimport {\r\n  HostListing as HostListingData,\r\n  HostListingVariables,\r\n} from '../../lib/graphql/mutations/HostListing/__generated__/HostListing';\r\nimport { ListingType } from '../../lib/graphql/globalTypes';\r\nimport {\r\n  iconColor,\r\n  displaySuccessNotification,\r\n  displayErrorMessage,\r\n} from '../../lib/utils';\r\nimport { Viewer } from '../../lib/types';\r\nimport {\r\n  HomeOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  BankOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  viewer: Viewer;\r\n}\r\n\r\nconst { Content } = Layout;\r\nconst { Text, Title } = Typography;\r\nconst { Item } = Form;\r\nexport const Host = ({ viewer, form }: Props & any) => {\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [imageBase64Value, setImageBase64Value] = useState<string | null>(null);\r\n\r\n  const [hostListing, { loading, data }] = useMutation<\r\n    HostListingData,\r\n    HostListingVariables\r\n  >(HOST_LISTING, {\r\n    onCompleted: () => {\r\n      displaySuccessNotification(\"You've successfully created your listing!\");\r\n    },\r\n    onError: () => {\r\n      displayErrorMessage(\r\n        \"Sorry! We weren't able to create your listing. Please try again later.\"\r\n      );\r\n    },\r\n  });\r\n  const handleImageUpload = (info: UploadChangeParam) => {\r\n    // info object gives the status for the upload\r\n    const { file } = info;\r\n\r\n    if (file.status === 'uploading') {\r\n      setImageLoading(true);\r\n      return;\r\n    }\r\n    // if done is done upload and has property originFileBody which is the orifinal file object\r\n    if (file.status === 'done' && file.originFileObj) {\r\n      getBase64Value(file.originFileObj, (imageBase64Value) => {\r\n        setImageBase64Value(imageBase64Value);\r\n        setImageLoading(false);\r\n      });\r\n    }\r\n  };\r\n  const handleHostListing = (values: any) => {\r\n    const fullAddress = `${values.address}, ${values.city}, ${values.state}, ${values.postalCode}`;\r\n\r\n    const input = {\r\n      ...values,\r\n      address: fullAddress,\r\n      image: imageBase64Value,\r\n      price: values.price * 100,\r\n    };\r\n    delete input.city;\r\n    delete input.state;\r\n    delete input.postalCode;\r\n\r\n    hostListing({\r\n      variables: {\r\n        input,\r\n      },\r\n    });\r\n  };\r\n  const onFormFailed = (errorInfo: any) => {\r\n    if (errorInfo) {\r\n      displayErrorMessage('Please complete all required form fields!');\r\n      return;\r\n    }\r\n  };\r\n\r\n  if (!viewer.id || !viewer.hasWallet) {\r\n    return (\r\n      <Content className='host-content'>\r\n        <div className='host__form-header'>\r\n          <Title level={4} className='host__form-title'>\r\n            You'll have to be signed in and connected with Stripe to host a listing!\r\n          </Title>\r\n          <Text type='secondary'>\r\n            We only allow users who've signed in to our application and have connected\r\n            with Stripe to host new listings. You can sign in at the{' '}\r\n            <Link to='/login'>/login</Link> page and connect with Stripe shortly after.\r\n          </Text>\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <Content className='host-content'>\r\n        <div className='host__form-header'>\r\n          <Title level={3} className='host__form-title'>\r\n            Please wait!\r\n          </Title>\r\n          <Text type='secondary'>We're creating your listing now.</Text>\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  if (data && data.hostListing) {\r\n    return <Redirect to={`/listing/${data.hostListing.id}`} />;\r\n  }\r\n\r\n  // const { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <Content className='host-content'>\r\n      <Form layout='vertical' onFinish={handleHostListing} onFinishFailed={onFormFailed}>\r\n        <div className='host__form-header'>\r\n          <Title level={3} className='host__form-title'>\r\n            Hi! Let's get started listing your place.\r\n          </Title>\r\n          <Text type='secondary'>\r\n            In this form, we'll collect some basic and additional information about your\r\n            listing.\r\n          </Text>\r\n        </div>\r\n\r\n        <Item\r\n          label='Home Type'\r\n          name='Home Type'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please choose property type for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio.Button value={ListingType.APARTMENT}>\r\n              <BankOutlined style={{ color: iconColor }} /> <span>Apartment</span>\r\n              {/* <Icon type='bank' style={{ color: iconColor }} /> <span>Apartment</span> */}\r\n            </Radio.Button>\r\n            <Radio.Button value={ListingType.HOUSE}>\r\n              <HomeOutlined style={{ color: iconColor }} /> <span>House</span>\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Item>\r\n\r\n        <Item\r\n          label='Max number of Guests'\r\n          name='maxGuests'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter max number of guests for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber min={1} placeholder='4' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Title'\r\n          extra='Max character count of 45'\r\n          name='Title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a title for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input maxLength={45} placeholder='The iconic and luxurious Bel-Air mansion' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Description of listing'\r\n          extra='Max character count of 400'\r\n          name='Description of listing'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a description for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea\r\n            rows={3}\r\n            maxLength={400}\r\n            placeholder='Modern, clean, and iconic home of the Fresh Prince. Situated in the heart of Bel-Air, Los Angeles.'\r\n          />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Address'\r\n          // name='Address'\r\n          // rules={[\r\n          //   {\r\n          //     required: true,\r\n          //     message: 'Please enter a address for your listing!',\r\n          //   },\r\n          // ]}\r\n        >\r\n          <Input placeholder='251 North Bristol Avenue' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='City/Town'\r\n          name='City/Town'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a city (or region) for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Los Angeles' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='State/Province'\r\n          name='State/Province'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a state (or province) for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='California' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Zip/Postal Code'\r\n          name='Zip/Postal Code'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a zip (or postal) code for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter a zip code for your listing!' />\r\n        </Item>\r\n\r\n        <Item\r\n          label='Image'\r\n          name='Image'\r\n          extra='Images have to be under 1MB in size and of type JPG or PNG'\r\n        >\r\n          <div className='host__form-image-upload'>\r\n            <Upload\r\n              name='image'\r\n              listType='picture-card'\r\n              showUploadList={false}\r\n              // action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n              beforeUpload={beforeImageUpload}\r\n              onChange={handleImageUpload}\r\n            >\r\n              {imageBase64Value ? (\r\n                <img src={imageBase64Value} alt='Listing' />\r\n              ) : (\r\n                <div>\r\n                  {imageLoading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                  {/* <Icon type={imageLoading ? 'loading' : 'plus'} /> */}\r\n                  <div className='ant-upload-text'>Upload</div>\r\n                </div>\r\n              )}\r\n            </Upload>\r\n          </div>\r\n        </Item>\r\n\r\n        <Item\r\n          label='Price'\r\n          name='Price'\r\n          extra='All prices in $USD/day'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter a price for your listing!',\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber min={0} placeholder='120' />\r\n        </Item>\r\n\r\n        <Item>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Item>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\n// HOF for form wrapper : HoST component to wrap\r\n// export const WrappedHost = Form.create<Props & FormComponentProps>({\r\n//   name: 'host_form',\r\n// })(Host);\r\n\r\nconst beforeImageUpload = (file: File) => {\r\n  const fileIsValidImage = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  const fileIsValidSize = file.size / 1024 / 1024 < 1;\r\n\r\n  if (!fileIsValidImage) {\r\n    displayErrorMessage('You can only upload valid JPG or PNG files!');\r\n    return false;\r\n  }\r\n\r\n  if (!fileIsValidSize) {\r\n    displayErrorMessage('You can only upload valid image files of under 1MB in size!');\r\n    return false;\r\n  }\r\n\r\n  return fileIsValidImage && fileIsValidSize;\r\n};\r\n\r\nconst getBase64Value = (\r\n  img: File | Blob, // uload image can rither be a file or file like blob\r\n  callback: (imageBase64Value: string) => void\r\n) => {\r\n  /*\r\n  FileReadeer allows to read blocks of a file\r\n  */\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(img); // read the contents of the img file\r\n  reader.onload = () => {\r\n    callback(reader.result as string);\r\n  };\r\n};\r\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\NotFound\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Login\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\AuthUrl\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Login\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\Logout\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\utils\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ErrorBanner\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\AppHeader\\components\\MenuItems\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\AppHeaderSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\User\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserProfile\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\PageSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\components\\ListingCard\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserBookings\\index.tsx",[],["223","224"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\User\\components\\UserListings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listing\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingBookings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingDetails\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBooking\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeHero\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\index.tsx",[],["225","226"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Footer\\data.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\queries\\Listings\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\globalTypes.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListingsSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Home\\components\\HomeListings\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsFilters\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsPagination\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\ConnectStripe\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\DisconnectStripe\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Stripe\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\HostListing\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listing\\components\\ListingCreateBookingModal\\index.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\graphql\\mutations\\CreateBooking\\index.ts",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":16,"column":8,"nodeType":"233","messageId":"234","endLine":16,"endColumn":14},{"ruleId":"231","severity":1,"message":"235","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"227","replacedBy":"236"},{"ruleId":"229","replacedBy":"237"},{"ruleId":"227","replacedBy":"238"},{"ruleId":"229","replacedBy":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'FormEvent' is defined but never used.",["240"],["241"],["240"],["241"],"no-global-assign","no-unsafe-negation"]