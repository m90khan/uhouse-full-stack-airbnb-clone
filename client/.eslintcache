[{"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx":"1","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts":"2","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx":"3","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts":"4","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.ts":"5","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\Listings.tsx":"6","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\index.ts":"7","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\server.ts":"8","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\useQuery.ts":"9","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\useMutation.ts":"10","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\index.ts":"11","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\index.ts":"12","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\ListingsSkeleton.tsx":"13"},{"size":728,"mtime":1609768195788,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":325,"mtime":1609582250232,"results":"17","hashOfConfig":"15"},{"size":35,"mtime":1609577073724,"results":"18","hashOfConfig":"15"},{"size":29,"mtime":1609576782312,"results":"19","hashOfConfig":"15"},{"size":3151,"mtime":1609769922395,"results":"20","hashOfConfig":"15"},{"size":88,"mtime":1609759340583,"results":"21","hashOfConfig":"15"},{"size":800,"mtime":1609758091812,"results":"22","hashOfConfig":"15"},{"size":2246,"mtime":1609763878744,"results":"23","hashOfConfig":"15"},{"size":1898,"mtime":1609763728206,"results":"24","hashOfConfig":"15"},{"size":37,"mtime":1609769808850,"results":"25","hashOfConfig":"15"},{"size":37,"mtime":1609769697272,"results":"26","hashOfConfig":"15"},{"size":769,"mtime":1609769670668,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1keggji",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\index.tsx",[],["57","58"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\reportWebVitals.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\App.tsx",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\Listings.tsx",["59"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\index.ts",[],["60","61"],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\server.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\useQuery.ts",["62"],"import { useState, useEffect, useCallback, useReducer } from 'react';\r\nimport { server } from './server';\r\n\r\ninterface State<TData> {\r\n  data: TData | null;\r\n  loading: boolean;\r\n  error: boolean;\r\n}\r\ninterface QueryResult<TData> extends State<TData> {\r\n  refetch: () => void;\r\n}\r\n\r\n// action types\r\ntype Action<TData> =\r\n  | { type: 'FETCH' }\r\n  | { type: 'FETCH_SUCCESS'; payload: TData }\r\n  | { type: 'FETCH_ERROR' };\r\n\r\n//  reducer\r\nconst reducer = <TData>() => (\r\n  state: State<TData>,\r\n  action: Action<TData>\r\n): State<TData> => {\r\n  switch (action.type) {\r\n    case 'FETCH':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { data: action.payload, loading: false, error: false };\r\n    case 'FETCH_ERROR':\r\n      return { ...state, loading: false, error: true };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport const useQuery = <TData = any>(query: string): QueryResult<TData> => {\r\n  // useReducer returns two values. state object and dispatch for action\r\n  // and function takes two args , reducer and initial state\r\n  /*\r\n  State is unknown. unknown similar to any but properties cannot be access within unknown type \r\n  so to type define state, we pass it function that returns the reducer function\r\n  */\r\n  const fetchReducer = reducer<TData>();\r\n  const [state, dispatch] = useReducer(fetchReducer, {\r\n    data: null,\r\n    loading: false,\r\n    error: false,\r\n  });\r\n  // memoization : create a cache copy of result and return it if nothing changed\r\n  // callback for memoization as we have a dependency in useEffect but function defined\r\n  // outside as we needed to return it\r\n  const fetch = useCallback(() => {\r\n    const fetchApi = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH' });\r\n\r\n        const { data, errors } = await server.fetch<TData>({ query });\r\n        if (errors && errors.length) {\r\n          throw new Error(errors[0].message);\r\n        }\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (err) {\r\n        dispatch({ type: 'FETCH_ERROR' });\r\n        throw console.error(err);\r\n      }\r\n    };\r\n    fetchApi();\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, [fetch]);\r\n\r\n  return { ...state, refetch: fetch };\r\n};\r\n","D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\lib\\api\\useMutation.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\index.ts",[],"D:\\Projects\\BreadAndBreakfast\\airbnb-clone\\client\\src\\sections\\Listings\\components\\ListingsSkeleton\\ListingsSkeleton.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":102,"column":9,"nodeType":"69","messageId":"70","endLine":102,"endColumn":36},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"73","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":18},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'deleteListingLoadingMessage' is assigned a value but never used.","Identifier","unusedVar",["74"],["75"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]